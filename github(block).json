[{"code":"","color":"#FF2196F3","name":"The developer is malware","typeName":"","palette":"301","type":"h","spec":"//The developer is malware"},{"code":"//The developer is malware\n}\n    private String apiGH \u003d \"\";\r\n\tprivate String nameGH \u003d \"\";\r\n\tprivate String keyGH \u003d \"\";\r\n\tprivate String contentGH \u003d \"\";\r\n\tprivate String shaGH \u003d \"\";\r\n\tprivate String messageGH \u003d \"\";\r\n    private String childKeyGH \u003d \"\";\r\n\tprivate HashMap\u003cString, Object\u003e map1GH \u003d new HashMap\u003c\u003e();\r\n\tprivate HashMap\u003cString, Object\u003e map2GH \u003d new HashMap\u003c\u003e();\r\n\tprivate HashMap\u003cString, Object\u003e map3GH \u003d new HashMap\u003c\u003e();\r\n\tprivate HashMap\u003cString, Object\u003e childValueGH \u003d new HashMap\u003c\u003e();\r\t\r\n\tprivate ArrayList\u003cString\u003e ls1GH \u003d new ArrayList\u003c\u003e();\n{\n\n}\n    public String stringToBase64(final String _string) {\r\n\t\tString base64String \u003d \"\";\n\t\ttry {\n\t\t\tbyte[] bytesEncoded \u003d org.apache.commons.codec.binary.Base64.encodeBase64(_string.getBytes());\n\t\t\tbase64String \u003d new String(bytesEncoded);\n\t\t} catch (Exception e) {\n\t\t\tSketchwareUtil.showMessage(getApplicationContext(), \"Error \"+ e);\n\t\t}\n\t\treturn base64String;\r\n\t}\r\n\t\r\n\t\r\n\tpublic String base64ToString(final String _base64) {\r\n\t\tString stringBase64 \u003d \"\";\n\t\ttry {\n\t\t\tbyte[] valueDecoded \u003d org.apache.commons.codec.binary.Base64.decodeBase64(_base64.getBytes());\n\t\t\tstringBase64 \u003d new String(valueDecoded);\n\t\t} catch (Exception e) {\n\t\t\tSketchwareUtil.showMessage(getApplicationContext(), \"Error \"+ e);\n\t\t}\n\t\treturn stringBase64;\r\n\t}\r\n\t\r\n\t\r\n\tpublic String pushGetKey(final double _length) {\r\n\t\tString _str1 \u003d \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n\t\tString _str2 \u003d \"_github-\";\r\n\t\tfor(int _repeat12 \u003d 0; _repeat12 \u003c (int)(_length); _repeat12++) {\r\n\t\t\t\t\t\tdouble _ran \u003d SketchwareUtil.getRandom((int)(1), (int)(_str1.length()));\r\n\t\t\t\t\t\t_str2 \u003d _str2+_str1.substring((int)(_ran - 1), (int)(_ran));\r\n\t\t}\r\n\t\treturn _str2;\r\n\t}\r\n\t\r\n\t\r\n\tpublic void connectGithub(final String _name, final String _repo, final String _token) {\r\n\t\tapiGH \u003d \"https://api.github.com/repos/\"+_name+\"/\"+_repo+\"/contents/realtime database/\";\r\n\t\tmap1GH \u003d new HashMap\u003c\u003e();\r\n\t\tmap1GH.put(\"Accept\", \"application/vnd.github+json\");\r\n\t\tmap1GH.put(\"Authorization\", \"Bearer \"+_token);\r\n\t\t%1$s.setHeaders(map1GH);\r\n\t}\r\n\t\r\n\t\r\n\tpublic void addKeyValue(final String _name, final String _key, final HashMap\u003cString, Object\u003e _map) {\r\n\t\tnameGH \u003d _name;\r\n\t\tkeyGH \u003d _key;\r\n\t\tmap2GH \u003d new Gson().fromJson(new Gson().toJson(_map), new TypeToken\u003cHashMap\u003cString, Object\u003e\u003e(){}.getType());\r\n\t\t%1$s.startRequestNetwork(RequestNetworkController.GET, apiGH+nameGH, \"add\", _%1$s_request_listener);\r\n\t}\r\n\t\r\n\t\r\n\tpublic void pushKeyValue(final String _name, final HashMap\u003cString, Object\u003e _map) {\r\n\t\tnameGH \u003d _name;\r\n\t\tkeyGH \u003d pushGetKey(SketchwareUtil.getRandom((int)(16), (int)(20)));\r\n\t\tmap2GH \u003d new Gson().fromJson(new Gson().toJson(_map), new TypeToken\u003cHashMap\u003cString, Object\u003e\u003e(){}.getType());\r\n\t\t%1$s.startRequestNetwork(RequestNetworkController.GET, apiGH+nameGH, \"add\", _%1$s_request_listener);\r\n\t}\r\n\t\r\n\t\r\n\tpublic void deleteKey(final String _name, final String _key) {\r\n\t\tnameGH \u003d _name;\r\n\t\tkeyGH \u003d _key;\r\n\t\t%1$s.startRequestNetwork(RequestNetworkController.GET, apiGH+nameGH, \"delete\", _%1$s_request_listener);\r\n\t}\r\n\t\r\n\t\r\n\tpublic void startListening(final String _name) {\r\n\t\tnameGH \u003d _name;\r\n\t\t%1$s.startRequestNetwork(RequestNetworkController.GET, apiGH+nameGH, \"\", _%1$s_request_listener);\r\n\t}\r\n\t\r\n\t\r\n\tpublic void startRequest(final HashMap\u003cString, Object\u003e _map) {\r\n\t\t%1$s.setParams(_map, RequestNetworkController.REQUEST_BODY);\r\n\t\t%1$s.startRequestNetwork(RequestNetworkController.PUT, apiGH+nameGH, \"\", _%1$s_request_listener);\r\n\t}\n{","color":"#FF2196F3","name":"put me on more block","typeName":"","palette":"301","type":" ","spec":"%m.requestnetwork put me on moreblock"},{"code":"//The developer is malware\ntry {\r\n\tmap3GH \u003d new Gson().fromJson(_response, new TypeToken\u003cHashMap\u003cString, Object\u003e\u003e(){}.getType());\r\n\tmessageGH \u003d map3GH.get(\"message\").toString();\r\n\tcontentGH \u003d _tag.isEmpty() ? contentGH : \"{}\";\r\n\tshaGH \u003d \"\";\r\n} catch (Exception e) {\r\n\ttry {\r\n\t\tmessageGH \u003d _response;\r\n\t\tmessageGH \u003d messageGH.substring((int)(messageGH.indexOf(\"{\\\"name\\\":\\\"\")), (int)(messageGH.indexOf(\",\\\"_links\\\":{\")));\r\n\t\tmessageGH \u003d messageGH+\"}\";\r\n\t\tmap3GH \u003d new Gson().fromJson(messageGH, new TypeToken\u003cHashMap\u003cString, Object\u003e\u003e(){}.getType());\r\n\t\tcontentGH \u003d map3GH.containsKey(\"content\") ? base64ToString(map3GH.get(\"content\").toString()) : contentGH;\r\n\t\tshaGH \u003d map3GH.get(\"sha\").toString();\r\n\t} catch (Exception ee) { }\r\n}\r\nif (_tag.isEmpty()) {\r\n\tmap3GH \u003d new Gson().fromJson(contentGH, new TypeToken\u003cHashMap\u003cString, Object\u003e\u003e(){}.getType());\r\n\tSketchwareUtil.getAllKeysFromMap(map3GH, ls1GH);\r\n\tfor(int _repeat81 \u003d 0; _repeat81 \u003c (int)(ls1GH.size()); _repeat81++) {\r\n\t\tchildKeyGH \u003d ls1GH.get((int)(_repeat81));\r\n\t\tchildValueGH \u003d new Gson().fromJson(map3GH.get(childKeyGH).toString(), new TypeToken\u003cHashMap\u003cString, Object\u003e\u003e(){}.getType());\r\n%1$s\n\t}\r\n%2$s\n}\r\nelse {\r\n\tmap3GH \u003d new HashMap\u003c\u003e();\r\n\tmap3GH \u003d new Gson().fromJson(contentGH, new TypeToken\u003cHashMap\u003cString, Object\u003e\u003e(){}.getType());\r\n\tif (_tag.equals(\"add\")) {\r\n\t\tmap3GH.put(keyGH, new Gson().toJson(map2GH));\r\n\t}\r\n\telse {\r\n\t\tmap3GH.remove(keyGH);\r\n\t}\r\n\tcontentGH \u003d new Gson().toJson(map3GH);\r\n\tmessageGH \u003d stringToBase64(contentGH);\r\n\tmap3GH.put(\"message\", nameGH);\r\n\tmap3GH.put(\"content\", messageGH);\r\n\tmap3GH.put(\"sha\", shaGH);\r\n\tstartRequest(map3GH);\r\n}","color":"#FF2196F3","typeName":"","name":"on child added","palette":"301","type":"e","spec":"onChildAdded","spec2":"success"},{"code":"childKeyGH","color":"#FF2196F3","name":"child key","typeName":"","palette":"301","type":"s","spec":"String: childKey"},{"code":"childValueGH","color":"#FF2196F3","name":"child value","typeName":"","palette":"301","type":"a","spec":"Map: childValue"},{"code":"connectGithub(%1$s, %2$s, %3$s); ","color":"#FF2196F3","name":"connect github","typeName":"","palette":"301","type":" ","spec":"connect github name %s repo %s token %s "},{"code":"addKeyValue(\"%1$s\", %2$s, %3$s); ","color":"#FF2196F3","name":"add key value","typeName":"","palette":"301","type":" ","spec":"%m.GithubDB add key %s value %m.varMap "},{"code":"pushKeyValue(\"%1$s\", %2$s); ","color":"#FF2196F3","name":"push key value","typeName":"","palette":"301","type":" ","spec":"%m.GithubDB push value %m.varMap "},{"code":"pushGetKey(%1$s)","color":"#FF2196F3","name":"push get key","typeName":"","palette":"301","type":"s","spec":"push getKey %d "},{"code":"deleteKey(\"%1$s\", %2$s); ","color":"#FF2196F3","name":"delete key","typeName":"","palette":"301","type":" ","spec":"%m.GithubDB delete key %s "},{"code":"startListening(\"%1$s\"); ","color":"#FF2196F3","name":"start listening","typeName":"","palette":"301","type":" ","spec":"%m.GithubDB start Listening"}]
